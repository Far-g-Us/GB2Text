"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è exe —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ GB2Text
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def create_simple_exe():
    """–°–æ–∑–¥–∞–µ—Ç exe —Ñ–∞–π–ª —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏"""
    
    print("üî® –°–æ–∑–¥–∞–Ω–∏–µ exe —Ñ–∞–π–ª–∞ –¥–ª—è GB2Text (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ PyInstaller
    try:
        import PyInstaller
        print("‚úÖ PyInstaller –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("‚ùå PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
        print("‚úÖ PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ò—â–µ–º –ø–∞–ø–∫—É GB2Text
    current_dir = Path(__file__).parent.parent
    gb2text_dir = None
    
    for path in [current_dir, current_dir.parent, current_dir.parent.parent]:
        potential_gb2text = path / "GB2Text"
        if potential_gb2text.exists() and (potential_gb2text / "main.py").exists():
            gb2text_dir = potential_gb2text
            break
    
    if not gb2text_dir:
        print("‚ùå –ü–∞–ø–∫–∞ GB2Text —Å main.py –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ GB2Text: {gb2text_dir}")
    
    main_script = gb2text_dir / "main.py"
    dist_dir = gb2text_dir / "dist"
    build_dir = gb2text_dir / "build"
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if dist_dir.exists():
        shutil.rmtree(dist_dir)
    if build_dir.exists():
        shutil.rmtree(build_dir)
    
    print("\nüî® –°–æ–∑–¥–∞–Ω–∏–µ debug –≤–µ—Ä—Å–∏–∏ —Å –∫–æ–Ω—Å–æ–ª—å—é...")
    
    cmd = [
        sys.executable, "-m", "PyInstaller",
        "--onedir",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º --onedir –≤–º–µ—Å—Ç–æ --onefile –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        "--console",  # –í—Å–µ–≥–¥–∞ —Å –∫–æ–Ω—Å–æ–ª—å—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        "--clean",
        "--name=GB2Text-Debug",
        "--hidden-import=gui.main_window",
        "--hidden-import=gui.text_extraction_tab", 
        "--hidden-import=gui.text_editing_tab",
        "--hidden-import=core.extractor",
        "--hidden-import=core.scanner",
        "--hidden-import=core.analyzer",
        "--hidden-import=plugins.auto_detect",
        "--hidden-import=tkinter",
        "--hidden-import=tkinter.ttk",
        "--hidden-import=tkinter.scrolledtext",
        "--hidden-import=tkinter.filedialog",
        "--hidden-import=tkinter.messagebox",
        "--hidden-import=json",
        "--hidden-import=logging",
        "--hidden-import=pathlib",
        "--hidden-import=collections",
    ]

    version_file = gb2text_dir / "VERSION"
    if version_file.exists():
        cmd.extend([f"--add-data={version_file};."])
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª VERSION")
    else:
        print(f"‚ö†Ô∏è –§–∞–π–ª VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {version_file}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    required_folders = ['plugins', 'locales', 'settings', 'resources', 'gui', 'core']
    for folder in required_folders:
        folder_path = gb2text_dir / folder
        if folder_path.exists():
            if folder == 'locales':
                # –î–ª—è locales –∫–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏, –∞ –Ω–µ —Å–∞–º—É –ø–∞–ø–∫—É
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π JSON —Ñ–∞–π–ª –æ—Ç–¥–µ–ª—å–Ω–æ
                locales_files = list(folder_path.glob('*.json'))
                for locale_file in locales_files:
                    cmd.extend([f"--add-data={locale_file};locales/"])
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder} ({len(locales_files)} —Ñ–∞–π–ª–æ–≤)")
            else:
                cmd.extend([f"--add-data={folder_path};{folder}"])
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}")
        else:
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ {folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    icon_path = gb2text_dir / "resources" / "app_icon.ico"
    if icon_path.exists():
        cmd.append(f"--icon={icon_path}")
    
    cmd.append(str(main_script))
    
    print(f"üöÄ –ö–æ–º–∞–Ω–¥–∞: {' '.join(str(x) for x in cmd)}")
    
    try:
        result = subprocess.run(cmd, cwd=gb2text_dir, capture_output=True, text=True)
        
        if result.returncode == 0:
            exe_path = dist_dir / "GB2Text-Debug" / "GB2Text-Debug.exe"
            if exe_path.exists():
                print(f"‚úÖ Debug –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {exe_path}")
                print(f"üìÅ –†–∞–∑–º–µ—Ä: {exe_path.stat().st_size / 1024 / 1024:.1f} MB")
                
                bat_content = f'''@echo off
echo –ó–∞–ø—É—Å–∫ GB2Text Debug –≤–µ—Ä—Å–∏–∏...
echo –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –æ—à–∏–±–∫–∏, –æ–Ω–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –≤ —ç—Ç–æ–º –æ–∫–Ω–µ
echo.
"{exe_path}"
echo.
echo –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è...
pause > nul
'''
                bat_path = dist_dir / "–ó–∞–ø—É—Å–∫ GB2Text.bat"
                with open(bat_path, 'w', encoding='cp1251') as f:
                    f.write(bat_content)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω bat —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞: {bat_path}")
                
                return True
            else:
                print("‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:")
            print(f"STDOUT: {result.stdout}")
            print(f"STDERR: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    print("GB2Text - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ exe")
    print("=" * 40)
    
    success = create_simple_exe()
    
    if success:
        print("\nüéâ Debug exe —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –ù–∞–π—Ç–∏ –º–æ–∂–Ω–æ –≤ –ø–∞–ø–∫–µ dist/GB2Text-Debug/")
        print("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ bat —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é exe")
        print("\nüí° –ï—Å–ª–∏ exe –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
        print("- –ó–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ bat —Ñ–∞–π–ª - –æ–Ω –ø–æ–∫–∞–∂–µ—Ç –æ—à–∏–±–∫–∏")
        print("- –ö–æ–Ω—Å–æ–ª—å –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("- –í—Å–µ –æ—à–∏–±–∫–∏ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤ –æ–∫–Ω–µ")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å exe")
